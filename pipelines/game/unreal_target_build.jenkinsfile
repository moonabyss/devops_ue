def ColorFromBuildResult (result) {
    if ("${result}" == 'SUCCESS') return '#18a558';
    if ("${result}" == 'ABORTED') return '#6e6e6e';
    if ("${result}" == 'UNSTABLE') return '#fcba03';
    return '#ff0000';
}

pipeline {
    agent {
        node {
            label ""
            customWorkspace "$BUILD_DIR"
        }
    }

    /*environment {
        BUILD_DIR = 'e:\\JenkinsJobs\\game-target-build-pipeline'
        GIT_URL_GAME = 'https://github.com/moonabyss/UnrealTPSGame'
        GIT_CREDENTIALS_GAME = 'moonabyss-github'
        GIT_BRANCH_GAME = 'master'
        GIT_CLONE_TIMEOUT_MIN = 60
        UAT_PATH = 'f:\\EpicGames\\Binary\\UE_5.1\\Engine\\Build\\BatchFiles\\RunUAT.bat'
        PROJECT_PATH = "$BUILD_DIR\\GAME.uproject"
        PLATFORM = 'Win64' // ['Android', 'Linux'..]
        // ARCHIVE_PATH = "e:\\JenkinsJobs\\Artifacts\\$JOB_NAME\\$BUILD_NUMBER"
        ARCHIVE_PATH = "$BUILD_DIR\\Build"
        BUILD_FLAGS = '-build -cook -package -stage -archive -pak -allmaps' // -client -server -noclient
        ZIP_DIR = "Build\\**\\*.*"
        SLACK_CHANNEL = 'tps-game-builds'
        CONFIG = 'Development' // ['Development', 'Shipping', 'DebugGame']
    }*/

    stages {
        stage('Git clone') {
            steps {
                slackSend channel: "$SLACK_CHANNEL",
                    color: "$currentBuild.previousBuild" == 'null' ? '#18a558' : ColorFromBuildResult("$currentBuild.previousBuild.result"),
                    message: "Build STARTED: ${env.JOB_NAME} #${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"

                checkout scmGit(branches: [[name: "$GIT_BRANCH_GAME"]], 
                extensions: [
                    [$class: 'CleanBeforeCheckout'],
                    [$class: 'CloneOption', timeout: "$GIT_CLONE_TIMEOUT_MIN"],
                    [$class: 'CheckoutOption', timeout: "$GIT_CLONE_TIMEOUT_MIN"]
                ],
                userRemoteConfigs: [[credentialsId: "$GIT_CREDENTIALS_GAME", 
                url: "$GIT_URL_GAME"]])
            }
        }
        stage('Build') {
            steps {
                bat '''
                    "%UAT_PATH%" BuildCookRun ^
                    -project="%PROJECT_PATH%" ^
                    -platform="%PLATFORM%" ^
                    -clientconfig="%CONFIG%" ^
                    -serverconfig="%CONFIG%" ^
                    -archivedirectory="%ARCHIVE_PATH%" ^
                    %BUILD_FLAGS%
                '''
            }
        }
        stage('Archive artifacts') {
            steps {
                archiveArtifacts artifacts: "$ZIP_DIR"
            }
        }
    }

    post {
        always {
            slackSend channel: "$SLACK_CHANNEL",
                color: ColorFromBuildResult("$currentBuild.currentResult"),
                message: "Build $currentBuild.currentResult: ${env.JOB_NAME} #${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
    }
}